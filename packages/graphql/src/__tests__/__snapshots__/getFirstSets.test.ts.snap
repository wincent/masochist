// Bun Snapshot v1, https://bun.sh/docs/test/snapshots

exports[`getFirstSets() produces first sets for the GraphQL grammar 1`] = `
"
Alias                  : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
Argument               : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ArgumentConst          : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ArgumentConstList      : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ArgumentList           : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ArgumentsConstOpt      : {OPENING_PAREN, null}
ArgumentsOpt           : {OPENING_PAREN, null}
DefaultValueOpt        : {EQUALS, null}
Definition             : {FRAGMENT, MUTATION, OPENING_BRACE, QUERY, SUBSCRIPTION}
DefinitionList         : {FRAGMENT, MUTATION, OPENING_BRACE, QUERY, SUBSCRIPTION}
Directive              : {AT}
DirectiveConst         : {AT}
DirectiveConstList     : {AT}
DirectiveList          : {AT}
DirectivesConstOpt     : {AT, null}
DirectivesOpt          : {AT, null}
Document               : {FRAGMENT, MUTATION, OPENING_BRACE, QUERY, SUBSCRIPTION}
ExecutableDefinition   : {MUTATION, OPENING_BRACE, QUERY, SUBSCRIPTION}
Field                  : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
FragmentDefinition     : {FRAGMENT}
FragmentName           : {NAME}
FragmentSpread         : {ELLIPSIS}
InlineFragment         : {ELLIPSIS}
ListType               : {OPENING_BRACKET}
ListValue              : {OPENING_BRACKET}
ListValueConst         : {OPENING_BRACKET}
ListValueConstList     : {BLOCK_STRING_VALUE, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, NUMBER, ON, OPENING_BRACE, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, STRING_VALUE, SUBSCRIPTION, TYPE, UNION}
ListValueList          : {BLOCK_STRING_VALUE, DOLLAR, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, NUMBER, ON, OPENING_BRACE, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, STRING_VALUE, SUBSCRIPTION, TYPE, UNION}
Name                   : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
NamedType              : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
NamedValue             : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
NonNullType            : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
NumberValue            : {NUMBER}
ObjectField            : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ObjectFieldConst       : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ObjectFieldConstList   : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ObjectFieldList        : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
ObjectValue            : {OPENING_BRACE}
ObjectValueConst       : {OPENING_BRACE}
OperationDefinition    : {MUTATION, OPENING_BRACE, QUERY, SUBSCRIPTION}
OperationNameOpt       : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION, null}
OperationType          : {MUTATION, QUERY, SUBSCRIPTION}
Selection              : {ELLIPSIS, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
SelectionList          : {ELLIPSIS, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
SelectionSet           : {OPENING_BRACE}
SelectionSetOpt        : {OPENING_BRACE, null}
StringValue            : {BLOCK_STRING_VALUE, STRING_VALUE}
Type                   : {ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, ON, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, SUBSCRIPTION, TYPE, UNION}
TypeConditionOpt       : {ON, null}
Value                  : {BLOCK_STRING_VALUE, DOLLAR, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, NUMBER, ON, OPENING_BRACE, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, STRING_VALUE, SUBSCRIPTION, TYPE, UNION}
ValueConst             : {BLOCK_STRING_VALUE, ENUM, FRAGMENT, IMPLEMENTS, INTERFACE, NAME, NUMBER, ON, OPENING_BRACE, OPENING_BRACKET, QUERY, SCALAR, SCHEMA, STRING_VALUE, SUBSCRIPTION, TYPE, UNION}
Variable               : {DOLLAR}
VariableDefinition     : {DOLLAR}
VariableDefinitionList : {DOLLAR}
VariableDefinitionsOpt : {OPENING_PAREN, null}"
`;
